apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-node-label
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: k8s-node-label
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
      - update
      - patch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: k8s-node-label
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-node-label
subjects:
  - kind: ServiceAccount
    name: k8s-node-label
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: k8s-node-label
rules:
  - apiGroups:
      - coordination.k8s.io
    resourceNames:
      - k8s-node-label
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: k8s-node-label
  namespace: kube-system
subjects:
  - kind: ServiceAccount
    name: k8s-node-label
    namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: k8s-node-label
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-node-label
  namespace: kube-system
  labels:
    k8s-app: k8s-node-label
spec:
  replicas: 3
  selector:
    matchLabels:
      k8s-app: k8s-node-label
  template:
    metadata:
      labels:
        k8s-app: k8s-node-label
    spec:
      serviceAccountName: k8s-node-label
      containers:
        - image: daspawnw/k8s-node-label:v0.6
          name: k8s-node-label
          env:
            - name: AWS_REGION
              value: eu-central-1
          args:
            - -exclude-evication
            - -provider=aws

          imagePullPolicy: "Always"
      tolerations:
        - effect: NoSchedule
          operator: Exists
